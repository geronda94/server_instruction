После входа в удаленный компьютер

sudo apt update
sudo apt upgrade

sudo apt install mc ufw nginx curl wget rsync zip unzip
sudo apt install landscape-common

Часовой пояс
sudo timedatectl set-timezone Europe/Kiev


Установка свежего питона

sudo apt install build-essential checkinstall \
 libreadline-gplv2-dev libncursesw5-dev libssl-dev \
 libsqlite3-dev tk-dev libgdbm-dev libc6-dev libbz2-dev

wget https://www.python.org/ftp/python/3.11.4/Python-3.11.4.tar.xz

tar -xf Python-3.11.4.tar.xz

cd Python-3.11.4

./configure --enable-optimizations
make -j$(nproc)

sudo make altinstall


Настройка фаервола UFW 
Ни в коем случае не запускать этот фаервол без его настройки

sudo nano /etc/default/ufw 
тут проверяем чтобы строчка была в таком положении
IPV6=yes


#####Если не нужно запускать тестовый запуск сайта игнорируем этот блок
sudo nano /etc/ufw/applications.d/flask  - создаем этот файл и вставляем туда:
[Flask]
title=Flask server
description=Flask test, do not use it in real project
ports=5000/tcp

sudo ufw app list - проверяем чтобы созданная конфигурация появилась в списке приложений
sudo ufw allow Flask
sudo ufw delete allow Flask -забираем разрешение


переходим в окружение сайта и через пип утсанавливаем гуникорн
pip install gunicorn

gunicorn --bin 0.0.0.0:5000 wsgi:app  - эта команда запускает приложение через гуникорн через тестовый порт
 который определили в этом блоке
###############################################################

sudo ufw allow OpenSSH - Включаем необходимое для подлкючения по ssh приложение, без этого ни в коем случае не включать фаервол
sudo ufw allow 'Nginx Full' - Разрешаем работу nginx 

sudo ufw enable - добавляем фаервол в автозагрузку и перезапускаем ситему



###Юниты
/run/systemd - тут лежат файлы созданные при установке системы
/etc/systemd - тут файл которые установил администратор
/etc/systemd/system - тут хранятся непосредсвенно конфигурации\юниты но не стоит их редактировать вручную
/etc/apt/sources.list.d - в этой папке хранится файл для компиляции всех настроек перед запуском systemd через systemctl

sudo systemctl edit --force --full stroimarket - создаем юнит если его не существует строймаркет -название будущего юнита
sudo systemctl edit  --full stroimarket - редактируем юнит 
sudo systemctl start stroimarket - запускаем службу
sudo systemctl status stroimarket - Если нет ошибок то покажет статус актив(зеленным цветом)
sudo systemctl enable stroimarket
sudo systemctl revert unit_name - откатываем измененя

(Пример конфигурационного файла для сайта под gunicorn и для бота под aiogram в  папке /Настройки программ)
#######################################################################


###Nginx
sudo nano /etc/ngnx/nginx.conf - Главная конфигурация nginx чрезе этот файл компилируютя все остальные конфигурации
но не нужно на прямую через него конфигурировать. Но в случае если сервер не запускается после настройки помогает
изменения в строке user www-data; где user-data заменяется на имя пользователя машины ubuntu(root, goga)

нужно проверить наличие и активность строче
        include /etc/nginx/conf.d/*.conf;
        include /etc/nginx/sites-enabled/*;
которые отвечают за подключение дополнительных файлов конфигурации

/etc/nginx/proxy_params - тут хранятся настройки хэдэров передаваемых в веб приложение

директорию /etc/nginx/sites-enabled/ при проксировании через nginx можно очистить

cd /etc/nginx/conf.d - в этом каталоге создаем конфигурационные файлы для портирования на gubicorn -> flask приложение
sudo nano stroimarket.conf - шаблон для заполнения в папке Натсройки программ stroimarket.conf
sudo nginx -t проверяем если нет ошибок в установленной нами конфигурации перед запуском

sudo nginx -s reload - перезапускаем nginx после того как утсановили конфиги




################################

###SSL сертификат
sudo apt install snapd
sudo snap install core - Установка снап репозитория для дальней установки ssl бота

sudo snap install --classic certbot    - установка бота сертификатора
sudo ln -s /snap/bin/certbot /usr/bin/certbot    - устанавливаем ссылку для доступа к боту другим програмам


sudo certbot --nginx -установка сертификатов на автомате, но чаще становится все криво по этому лучше руками
sudo certbot certonly --nginx  - установка только сертификата, дальше спросит для какого домена нужен сертификат
sudo certbot renew --dry-run  - проверка без внесения изменений
sudo certbot certificate - просмотр утсановленных сертификатов


/etc/letsencrypt/live - тут лежат сертификаты установленные ботом, а точнее их ссылки сами сертификаты в папке archive
но не нужно обращаться к ним на прямую

/etc/letsencrypt/live/supercat.skin - в папке с именем домена лежат сертификаты на этот домен
можно так же устанавливать свои собственные сертификаты в эту папку

sudo crontab -e    - утилита которая выполняет некие действия по расписанию, нам она нужна для автообновления сертификата
в конце утсанавливаем там такую строчку
30 2 7 * * /usr/bin/certbot renew >> /var/log/renew-ssl-bot.log
для обновления 2:30 7 числа каждого месяца сертификатов


###Установка сертификата в Nginx
cd /etc/nginx/conf.d
sudo nano stroimarket_ssl.conf   - создаем файл конфигурации для доступа по ssh тоесть через ssl сертификат
